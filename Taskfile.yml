# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
version: '3'

vars:
  BASETAG: 0.2.0-trinity
  IMAGE: nuvolaris/nuvolaris-operator
  REPO: ghcr.io
  KUBE:
    sh: ./detect.sh
  TAG:
    sh: git describe --tags --abbrev=0 2>/dev/null || echo latest
  CONTROLLER:
    sh: cat deploy/openwhisk-standalone/standalone-deploy.yaml | awk '/image:/ { print $2 }'
  OPERATOR: "{{.REPO}}/{{.IMAGE}}:{{.TAG}}"
  N: ""

dotenv:
  - .env

tasks:
  setup:
    deps:
      - update-files-from-openwhisk
      - ssh-key
      - configure-env
    cmds:
      - poetry install
    status:
      - test -e $GOBIN/kopf

  env: env
  watchpo: watch kubectl -n nuvolaris get po
  
  cli: 
    - task: dev:cli

  # configure env
  configure-env:
    cmds:
      - echo "please copy .env.dist in .env and add the keys"
    status:
      - test -f .env

  # update configuration files from openwhisk source
  update-files-from-openwhisk: 
    cmds:
      - | 
        if test -d ../nuvolaris-controller
        then cp -v ../nuvolaris-controller/openwhisk/ansible/files/*.json nuvolaris/files
        else echo "not found ../nuvolaris-controller/openwhisk"
        fi
    status:
      - test -f nuvolaris/files/runtimes.json

  # generate ssh keys
  ssh-key:
    cmds:
      - ssh-keygen -b 2048 -t rsa -f clusters/id_rsa -q -N ""
      - ssh-keygen  -y -f clusters/id_rsa >clusters/id_rsa.pub
    status:
      - test -f clusters/id_rsa.pub

  image-tag: git tag -d $(git tag) ; git tag -f {{.BASETAG}}.$(date +%y%m%d%H) ; git tag

  build: docker build . -t {{.REPO}}/{{.IMAGE}}:{{.TAG}} {{.CLI_ARGS}}
  
  buildx-and-push:
    cmds:
      - docker buildx build --platform linux/amd64,linux/arm64 -t {{.REPO}}/{{.IMAGE}}:{{.TAG}} . --push

  unit: |
    for test in nuvolaris/{{.T}}*.py
    do  echo "*** $test"
        poetry run python3 -m doctest $test {{.CLI_ARGS}}
    done

  integ: |
    for test in tests/{{.T}}*.ipy
    do  echo "*** $test"
        poetry run ipython $test {{.CLI_ARGS}}
    done

  kube:
    cmds:
     - |-
       for test in tests/{{.KUBE}}/{{.T}}*.ipy
       do echo "*** [{{.KUBE}}] $test"
          poetry run ipython $test {{.CLI_ARGS}}
       done
    silent: true

  test:
    - task: unit
    - task: integ
    - task: test:all

  use: 
    cmds:
    - |-
        if test -z "{{.N}}"
        then echo "select with 'task use N=<n>' where '<n>' is one of:"
             ls clusters/*.kubeconfig | sort | awk '{ print NR, $0 }'
        else CFG="$(ls -1 clusters/*.kubeconfig | tail +{{.N}} | head -1)" 
             cp $CFG ~/.kube/config
             echo "selected $CFG"
             kubectl get nodes
        fi
    silent: true

  1: task use N=1
  2: task use N=2
  3: task use N=3
  4: task use N=4
  5: task use N=5
  6: task use N=6
  7: task use N=7
  8: task use N=8
  9: task use N=9


includes:
  dev: TaskfileDev.yml
  test: 
    taskfile: TaskfileTest.yml
    vars:
      CONTROLLER: "{{.CONTROLLER}}"
      OPERATOR: "{{.OPERATOR}}"
  kind:  
    taskfile: "clusters/kind.yml"
    dir: "clusters"
    optional: yes
  eks:
    taskfile: clusters/eks.yml
    dir: "clusters"
    optional: yes
  lks:  
    taskfile: clusters/lks.yml
    dir: clusters/
    optional: yes
