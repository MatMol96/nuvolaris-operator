# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

print("*** couchdb_util_test ***")


def test_db():
    """
    >>> from nuvolaris.couchdb_util import *
    >>> check_db("subjects")
    False
    >>> create_db("subjects")
    True
    >>> check_db("subjects")
    True
    >>> create_db("subjects")
    False
    >>> delete_db("subjects")
    True
    >>> delete_db("subjects")
    False
    >>> check_db("subjects")
    False
    >>> recreate_db("subjects")
    'recreate_db: created'
    >>> check_db("subjects")
    True
    >>> recreate_db("subjects")
    'recreate_db:'
    >>> recreate_db("subjects", recreate=True)
    'recreate_db: deleted created'
    >>> delete_db("subjects")
    True
    """
    pass


def test_doc():
  """
  >>> from nuvolaris.couchdb_util import *
  >>> db = "test"
  >>> create_db(db)
  True
  >>> get_doc(db, "test") == None
  True
  >>> doc = {"_id":"test", "value":"hello" }
  >>> update_doc(db,  doc)
  True
  >>> get_doc(db, "test")['value']  
  'hello'
  >>> doc['value'] = 'world'
  >>> update_doc(db,  doc)
  True
  >>> get_doc(db, "test")['value']  
  'world'
  >>> delete_doc(db, "test")
  True
  >>> delete_doc(db, "test")
  False
  >>> update_templated_doc(db, "test.json", {"item": "first"})
  True
  >>> get_doc(db, "test")['value']
  'first'
  >>> update_templated_doc(db, "test.json", {"item": "second"})
  True
  >>> get_doc(db, "test")['value']
  'second'
  >>> delete_doc(db, "test")
  True
  >>> delete_db(db)
  True
  """
  pass

if __name__ == "__main__":

    !kubectl apply -f deploy/nuvolaris-operator/nuvolaris-ns.yaml
    !kubectl apply -f deploy/couchdb
    !kubectl -n nuvolaris wait --for=condition=ready pod -l name=couchdb

    import doctest
    doctest.testmod()

    !kubectl delete -f deploy/couchdb
